1- Primeiro Ponto: 

*Pasta components:{
    aprendi que criando essa pasta conseguimos organizar nossos arquivos de
    algum fim , deixando o projeto de uma maneira organizada e mais facil de
    ler
}

2- Segundo Ponto:

*Extensao ES7 React/Redux/GraphQL/React-Native snippets:{
    aprendi que ela funciona como um tipo de auto-complete
    mas nesse caso com um comando o  "rafce" ele cria um componente
    funcional automaticamente, em projetos menores pode ser 
    opcional,mas em grandes é do tipo meio que obrigatorio por que
    tempo é dinheiro!
   
}

3- Terceiro Ponto:

* App.jsx {
    aprendi que dentro dela é que colocamos nossas alteraçoes que fazemos
    dentro dos components pensa que é como se fosse um tipo de Use, quando
    criavamos uma rota usando express e na app principal é que colocavamos
    o Use(rota), para avisar a aplicaçao principal que existe tal rota e que
    agora ela faz parte da apliocaçao principal
    }

4- Quarto Ponto: 

*App.css {
    aprendi que como o css ja que aprendi,é nele que faremos as estilizaçoes
    nos elementos,no entanto podemos dividir as estilizaçoes em partes e arquivos
    assim estilizando tanto a parte principal do projeto,quanto só o componente a manipular
    nesse caso o (login.css) 
} 

5- Quinto Ponto:

*validacao de form em login.jsx{
    
    Pra mim ate agora certamente o meu ponto favorito,aprendi como construir uma primeira estrutura
    de validaçao com react, muitos passos foram necessarios vou pontuar todos :
    
    (1){ useState } from "react": resposnavel por operar dentro dos nossos inputs como um manipulador de dados
    
    (2) const lerDado / const alterarDado: apos importar usamos o Use state para realizar essas 2 operaçoes dentro dos inputs
    
    (3) funcao ValidarForm: ela vai ser resposavel pelo envio de dados mas primeiro de tudo precisamos travar o recarregamento
    da pagina para assim podermos monitorar os dados que passam pelos inputs,assim para realizar essa funçao passamos como parametro
    para a nossa funçao o callBack "event" que logo em seguida recebe um methodo "preventDefault()responsavel por executar
    o nao recarregamento da pagina apos o usuario adicionar seus dados dentro dos inputs construidos"
    
    OBS: A funcao ValidarForm tem que estar conectada a tag form da nossa estrutura HTML pra funcionar!

    (4) funcao ValidarForm: Apos travar a pagina para ela nao carregar,trabalhei com o envio dos dados , essa parte tambem nao
    tem muito segredo,pra validar a gente ultiliza aquelas 2 const de ler e alterar dado (passwor,Setpasssword)
    e entao dentro dos inputs chamamos o menthodo on-change e colocamos um calback (e) que eventuara a validaçao
    apos isso vamos chamar nosso (SetValor) e ativar a validaçao ao input capturando o input selecionado,o valor dentro dele e assim colocando o evento
    nele! é de fato emocionante e emplogante poder aprender cada vez mais e conseguir entender como funcionam as logicas
    de cada framwork,biblioteca,funçao e etc  
} 